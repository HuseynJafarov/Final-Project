@model Paginate<BlogVM>
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<main class="main">
    
    <nav class="breadcrumb-nav has-border">
        <div class="container">
            <ul class="breadcrumb">
                <li><a asp-controller="Home" asp-action="Index">Home</a></li>
                <li><a asp-controller="Blog" asp-action="Index">Blog</a></li>
            </ul>
        </div>
    </nav>
    <div class="page-content">
        <div class="container mt-8">
            <div class="row posts cols-md-3">
                @foreach (var blog in Model.Datas)
                {
                    @foreach (var blog1 in blog.Blogs)
                    {
                        <article class="post post-border post-classic post-classic-sm overlay-zoom mb-8">
                            <figure class="post-media">
                                <a >
                                    <img src="~/assets/images/blog/@blog1.Image" width="905" height="500" alt="post">
                                </a>
                            </figure>
                            <div class="post-details text-center">
                                <div class="post-calendar">
                                    18 February 2021
                                </div>
                                <h4 class="post-title"><a >@blog1.Title</a></h4>
                                <p class="post-content">
                                    @blog1.Description
                                </p>

                            </div>
                        </article>

                    }

                }
                
            </div>
                    <div class="toolbox toolbox-pagination pt-2 pb-6">
                        <ul class="pagination">
                            @if (Model.CurrentPage == 1)
                            {
                                <li class="page-item disabled">
                                 <a  disabled="disabled" class="Previous" asp-action="Index" asp-route-page="@(1)"><i class="p-icon-angle-left"></i></a>
                                </li>
                            }
                            else
                            {
                                <li class="page-item active">
                                    <a  class="Previous" asp-action="Index" asp-route-page="@(Model.CurrentPage -1)"><i class="p-icon-angle-left"></i></a>
                                </li>
                            }
                            @for (int i = 1; i <= Model.TotalPage; i++)
                            {
                                <li class=" page-item active @(i==Model.CurrentPage ? "disabled": "") ">
                                    <a asp-action="Index" asp-route-page="@i">@i</a>
                                </li>
                            }
                            @if (Model.CurrentPage == Model.TotalPage)
                            {
                                <li class=" page-item @(Model.HasNext == true ? "":"disabled")">
                                    <a class="Next" asp-action="Index" asp-route-page="@(Model.TotalPage)"><i class="ion-ios-arrow-right"></i></a>
                                </li>
                            }
                            else
                            {
                                <li class="page-item @(Model.HasNext == true ? "":"disabled")">
                                    <a class="Next" asp-action="Index" asp-route-page="@(Model.CurrentPage +1)"> <i class="p-icon-angle-right"></i></a>
                                </li>
                            }
                        </ul>
                    </div>
        </div>
    </div>
</main>

